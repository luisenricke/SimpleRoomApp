ext {
    //Packages
    oldSupportPackage = 'com.android.support'
    googlePackage = 'com.google'
    androidxPackage = 'androidx'

    squareupPackage = 'com.squareup'
    reactivePackage = 'io.reactivex.rxjava2'

    jakeWhartonPackage = 'com.jakewharton'
    bumptechPackage = 'com.github.bumptech'

    junitPackage = 'junit'
    mockitoPackage = 'org.mockito'

    //Version
    supportVersion = '1.1.0'
    appCompatVersion = '1.1.0'
    coreKtxVersion = '1.1.0'
    annotationVersion = '1.1.0'
    legacySupportv4Version = '1.0.0'
    recycleviewVersion = '1.0.0'
    cardviewVersion = '1.0.0'
    constraintLayoutVersion = '1.1.3'
    lifecycleVersion = '2.1.0'
    materialVersion = '1.1.0-alpha10'

    roomVersion = '2.2.0-rc01'

    retrofitVersion = '2.6.1'
    gsonVersion = '2.8.5'
    okhttpVersion = '4.2.0'

    junitVersion = '4.12'
    mockitoVersion = '2.28.0'
    testRunnerVersion = '1.0.2'
    espressoVersion = '3.2.0'

    rxjavaVersion = '2.2.0'
    rxandroidVersion = '2.1.0'

    picassoVersion = '2.71828'
    glideVersion = '4.9.0'

    timberVersion = '4.7.1'
    butterknifeVersion = '7.0.0'

    androidxDependencies = [
            appCompat       : buildDependency(androidxPackage, 'appcompat', 'appcompat', appCompatVersion),
            coreKtx         : buildDependency(androidxPackage, 'core', 'core-ktx', coreKtxVersion),
            annotation      : buildDependency(androidxPackage, 'annotation', 'annotation', annotationVersion),
            legacySupportv4 : buildDependency(androidxPackage, 'legacy', 'legacy-support-v4', legacySupportv4Version),
            recyclerview    : buildDependency(androidxPackage, 'recyclerview', 'recyclerview', recycleviewVersion),
            cardview        : buildDependency(androidxPackage, 'cardview', 'cardview', cardviewVersion),
            constraintlayout: buildDependency(androidxPackage, 'constraintlayout', 'constraintlayout', constraintLayoutVersion),
            lifecycle       : buildDependency(androidxPackage, 'lifecycle', 'lifecycle-extensions', lifecycleVersion)
    ]

    googleDependencies = [
            material: buildDependency(googlePackage, 'android.material', 'material', materialVersion),
            gson    : buildDependency(googlePackage, 'code.gson', 'gson', gsonVersion)
    ]

    roomDependencies = [
            runtime : buildDependency(androidxPackage, 'room', 'room-runtime', roomVersion),
            compiler : buildDependency(androidxPackage, 'room', 'room-compiler', roomVersion),
            rxjava : buildDependency(androidxPackage, 'room', 'room-rxjava2', roomVersion),
            testing : buildDependency(androidxPackage, 'room', 'room-testing', roomVersion)
    ]

    retrofitDependencies = [
            retrofit          : buildDependency(squareupPackage, 'retrofit2', 'retrofit', retrofitVersion),
            gson              : buildDependency(squareupPackage, 'retrofit2', 'converter-gson', retrofitVersion),
            rxjava            : buildDependency(squareupPackage, 'retrofit2', 'adapter-rxjava2', retrofitVersion),
            loggingInterceptor: buildDependency(squareupPackage, 'okhttp3', 'logging-interceptor', okhttpVersion)
    ]

    rxDependencies = [
            rxJava   : buildDependency(reactivePackage, 'rxjava', rxjavaVersion),
            rxAndroid: buildDependency(reactivePackage, 'rxandroid', rxandroidVersion)
    ]

    testingDependencies = [
            junit   : buildDependency(junitPackage, 'junit', junitVersion),
            mockito : buildDependency(mockitoPackage, 'mockito-core', mockitoVersion),
            runner  : buildDependency(oldSupportPackage, 'test', 'runner', testRunnerVersion),
            espresso: buildDependency(androidxPackage, 'test.espresso', 'espresso-core', espressoVersion),
    ]

    jakeWhartonDependencies = [
            timber     : buildDependency(jakeWhartonPackage, 'timber', 'timber', timberVersion),
            butterknife: buildDependency(jakeWhartonPackage, 'butterknife', 'butterknife', butterknifeVersion)
    ]

    glide = buildDependency(bumptechPackage, 'glide', 'glide', glideVersion)
    picasso = buildDependency(squareupPackage, 'picasso', 'picasso', picassoVersion)
}

String buildDependency(String pack, String dependency, String version) {
    return "${pack}:${dependency}:${version}"
}

String buildDependency(String superPack, String subPack, String dependency, String version) {
    return "${superPack}.${subPack}:${dependency}:${version}"
}

